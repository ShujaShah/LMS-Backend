const process = require('process'); // Import the 'process' module

process.on('uncaughtException', (err) => {
  console.log('UNCAUGHT EXCEPTION ------------->>>>');
  console.log(err);
  process.exit(1);
});

const fs = require('fs');
const https = require('https');

const mongoose = require('mongoose');
const dotenv = require('dotenv');
dotenv.config();

const config = require('./config'); // IMPORTANT! Here, we are configuring mongoose for entire application. If this is not required here the mongoose connection will not be available throughout the application. (Do not delete this even when this variable is not being used anywhere)
const app = require('../app').app;

const port = process.env.PORT || 3000;
const httpsPort = process.env.PORT_HTTPS || 8443;

const httpsServer =
  process.env.NODE_ENV === 'development' &&
  https.createServer(
    {
      key: fs.readFileSync(`${__dirname}/../cert/server.key.pem`, 'utf-8'),
      cert: fs.readFileSync(`${__dirname}/../cert/server.cert.pem`, 'utf-8'),
      // ca: fs.readFileSync(`${__dirname}/../cert/ca.cert.pem`, "utf-8"),
    },
    app
  );

process.env.NODE_ENV === 'development' &&
  httpsServer.listen(httpsPort, '0.0.0.0', () => {
    console.log(`https server running on port: ${httpsPort}`);
  });

const server = app.listen(port, '0.0.0.0', () => {
  console.log(`Server running on port ${port}`);
});

process.on('unhandledRejection', (err) => {
  console.log('UNHANDLED REJECTION-------------->>>>');
  console.log(err);
  server.close(() => {
    process.exit(1);
  });
});
